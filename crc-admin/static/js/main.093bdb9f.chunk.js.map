{"version":3,"sources":["components/UI/button/DefaultButton.module.css","components/UI/input/DefaultInput.module.css","components/UI/navbar/Navbar.module.css","components/UI/loader/Loader.module.css","store/reducers/auth/types.ts","context/AuthContext.tsx","components/UI/button/DefaultButton.tsx","components/UI/input/DefaultInput.tsx","components/LoginForm.tsx","pages/LoginPage.tsx","components/SearchForm.tsx","components/UI/input/InputWithCheckbox.tsx","store/reducers/auth/action-creators.ts","router/index.ts","hooks/useTypedSelector.ts","components/UI/navbar/Navbar.tsx","hooks/useAuthActions.ts","pages/MainPage.tsx","components/UI/loader/Loader.tsx","pages/SignUpPage.tsx","pages/UserIdPage.tsx","components/AppRouter.tsx","App.tsx","store/reducers/auto/types.ts","store/reducers/auth/index.ts","store/reducers/auto/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","AuthActionEnum","AuthContext","createContext","DefaultButton","props","className","classes","defaultButton","DefaultInput","defaultInput","LoginForm","useState","email","setEmail","password","setPassword","conSetIsAuth","useContext","submit","a","signInWithEmailAndPassword","getAuth","res","console","log","user","localStorage","setItem","onSubmit","e","preventDefault","placeholder","type","required","value","onChange","target","onClick","LoginPage","SearchForm","inputValue","setInputValue","search","setSearch","db","getFirestore","router","useHistory","name","q","query","collection","where","getDocs","snap","empty","resultArray","forEach","doc","push","id","data","firebase","getUser","length","map","el","InputWithCheckbox","state","setState","disabled","RouteNames","AuthActionCreators","setIsAuth","auth","SET_AUTH","payload","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","setUser","SET_USER","login","dispatch","message","logout","signOut","removeItem","useTypedSelector","useSelector","Navbar","useDispatch","bindActionCreators","useAuthActions","history","navbar","uid","MainPage","useEffect","initialValues","hello","Loader","classnames","ltds","SignUpPage","loading","setLoading","firstName","lastName","currentUser","setCurrentUser","handleSubmit","values","rePassword","createUserWithEmailAndPassword","setDoc","phoneNumber","to","resetForm","htmlFor","UserIdPage","docRef","getDoc","docSnap","exists","fetchUser","match","params","check","publicRoutes","path","component","exact","privateRoutes","AppRouter","conIsAuth","route","MAIN","LOGIN","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AutoActionEnum","App","getItem","Provider","initialState","isAuth","error","isLoading","auto","rootReducer","combineReducers","action","SET_AUTO","SET_LOADING","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.093bdb9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultButton\":\"DefaultButton_defaultButton__17AXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultInput\":\"DefaultInput_defaultInput__3Kye1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1RIl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ltds\":\"Loader_ltds__dEe6q\",\"lds-ripple\":\"Loader_lds-ripple__1E2DK\"};","import { User } from 'firebase/auth';\n\nexport interface AuthState {\n  isAuth: boolean;\n  isLoading: boolean;\n  error: string | null;\n  user: User;\n}\n\nexport enum AuthActionEnum {\n  SET_USER = 'SET_USER',\n  SET_AUTH = 'SET_AUTH',\n  SET_ERROR = 'SET_ERROR',\n  SET_IS_LOADING = 'SET_IS_LOADING',\n}\n\nexport interface SetUserAction {\n  type: AuthActionEnum.SET_USER;\n  payload: User;\n}\n\nexport interface SetAuthAction {\n  type: AuthActionEnum.SET_AUTH;\n  payload: boolean;\n}\n\nexport interface SetErrorAction {\n  type: AuthActionEnum.SET_ERROR;\n  payload: string;\n}\n\nexport interface SetIsLoadingAction {\n  type: AuthActionEnum.SET_IS_LOADING;\n  payload: boolean;\n}\n\nexport type AuthAction =\n  | SetAuthAction\n  | SetErrorAction\n  | SetIsLoadingAction\n  | SetUserAction;\n","import { createContext } from 'react';\n\nconst initialState: AuthState = {\n  conIsAuth: false,\n  conLoading: false,\n};\n\ninterface AuthState {\n  conIsAuth: boolean;\n  conLoading: boolean;\n}\n\nexport const AuthContext = createContext<any | null>(null);\n","import React from 'react';\nimport classes from './DefaultButton.module.css';\n\nconst DefaultButton = (props: any) => {\n  return <button className={classes.defaultButton} {...props} />;\n};\n\nexport default DefaultButton;\n","import React from 'react';\nimport classes from './DefaultInput.module.css';\n\nconst DefaultInput = (props: any) => {\n  return <input className={classes.defaultInput} {...props} />;\n};\n\nexport default DefaultInput;\n","import { getAuth, signInWithEmailAndPassword } from '@firebase/auth';\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport DefaultButton from './UI/button/DefaultButton';\nimport DefaultInput from './UI/input/DefaultInput';\n\n// import Loader from './UI/loader/Loader';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { conSetIsAuth } = useContext(AuthContext);\n\n  const submit = async () => {\n    try {\n      const res = await signInWithEmailAndPassword(getAuth(), email, password);\n      console.log(res.user);\n      localStorage.setItem('auth', 'true');\n      conSetIsAuth(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <form onSubmit={(e: any) => e.preventDefault()} className=\"login-form\">\n      <DefaultInput\n        placeholder=\"E-mail\"\n        type=\"text\"\n        required\n        value={email}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setEmail(e.target.value)\n        }\n      />\n      <DefaultInput\n        placeholder=\"Password\"\n        type=\"password\"\n        required\n        value={password}\n        onChange={(e: any) => setPassword(e.target.value)}\n      />\n      <div className=\"btn-container\">\n        <DefaultButton onClick={submit}>Login</DefaultButton>\n      </div>\n      {/* {isLoading ? <Loader /> : <div />} */}\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { FC } from 'react';\nimport LoginForm from '../components/LoginForm';\n\nconst LoginPage: FC = () => {\n  return (\n    <div className='login-page'>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import * as firebase from 'firebase/app';\nimport {\n  collection,\n  getDocs,\n  getFirestore,\n  query,\n  where,\n} from 'firebase/firestore';\nimport React, { FC, useState } from 'react';\nimport DefaultButton from './UI/button/DefaultButton';\nimport DefaultInput from './UI/input/DefaultInput';\nimport { useHistory } from 'react-router';\n\ninterface User {\n  id: string;\n  data: {};\n}\n\ninterface IUser {\n  id: string;\n  data: {};\n}\n\nconst SearchForm: FC = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [search, setSearch] = useState<[]>([]);\n  const db = getFirestore();\n  const router = useHistory();\n\n  async function getUser(name: string) {\n    const q = query(collection(db, '/users'), where('firstName', '==', name));\n    const snap = await getDocs(q);\n    if (snap.empty) {\n      console.log('Nothing to view');\n    } else {\n      const resultArray: any = [];\n      snap.forEach((doc) => {\n        resultArray.push({ id: doc.id, data: doc.data() });\n      });\n      setSearch(resultArray);\n      console.log(firebase.getApps());\n    }\n  }\n\n  return (\n    <div>\n      <DefaultInput\n        placeholder=\"Search form\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setInputValue(e.target.value)\n        }\n      />\n      <DefaultButton onClick={() => getUser(inputValue)}>Search</DefaultButton>\n      {search.length > 0 ? (\n        <div>Найдено: {search.length} записей</div>\n      ) : (\n        <div />\n      )}\n      {search.length > 0 ? (\n        search.map((el: IUser) => (\n          <div key={el.id} onClick={() => router.push(`/users/${el.id}`)}>\n            {el.id}\n          </div>\n        ))\n      ) : (\n        <div>Nothing to view</div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import React, { useState } from 'react';\nimport { Field } from 'formik';\n\nconst InputWithCheckbox = (props: any) => {\n  const [state, setState] = useState(true);\n\n  function handleChange() {\n    setState(!state);\n  }\n\n  return (\n    <div>\n      <Field disabled={state} {...props} />\n      <input type=\"checkbox\" onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default InputWithCheckbox;\n","import { getAuth, signInWithEmailAndPassword, signOut, User } from 'firebase/auth';\nimport { AppDispatch } from '../..';\nimport {\n  AuthActionEnum,\n  SetAuthAction,\n  SetErrorAction,\n  SetIsLoadingAction,\n  SetUserAction,\n} from './types';\n\nexport const AuthActionCreators = {\n  setIsAuth: (auth: boolean): SetAuthAction => ({\n    type: AuthActionEnum.SET_AUTH,\n    payload: auth,\n  }),\n  setIsLoading: (payload: boolean): SetIsLoadingAction => ({\n    type: AuthActionEnum.SET_IS_LOADING,\n    payload,\n  }),\n  setError: (payload: string): SetErrorAction => ({\n    type: AuthActionEnum.SET_ERROR,\n    payload,\n  }),\n  setUser: (user: User): SetUserAction => ({\n    type: AuthActionEnum.SET_USER,\n    payload: user,\n  }),\n  login: (email: string, password: string) => async (dispatch: AppDispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsLoading(true));\n      const res = await signInWithEmailAndPassword(getAuth(), email, password);\n      dispatch(AuthActionCreators.setUser(res.user));\n      dispatch(AuthActionCreators.setIsAuth(true));\n      localStorage.setItem('auth', 'true');\n    } catch (error: any) {\n      dispatch(AuthActionCreators.setError(error.message));\n    }\n  },\n  logout: () => async (dispatch: AppDispatch) => {\n    try {\n      await signOut(getAuth());\n      dispatch(AuthActionCreators.setIsAuth(false));\n      localStorage.removeItem('auth');\n    } catch (e: any) {\n      console.log(e);\n    }\n  },\n};\n","import React from 'react';\nimport LoginPage from '../pages/LoginPage';\nimport MainPage from '../pages/MainPage';\nimport TasksPage from '../pages/TasksPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport UserIdPage from '../pages/UserIdPage';\n\nexport interface IRoute {\n  path: string;\n  component: React.ComponentType;\n  exact?: boolean;\n}\n\nexport enum RouteNames {\n  LOGIN = '/login',\n  MAIN = '/main',\n  SIGNUP = '/signup',\n}\n\nexport const publicRoutes: IRoute[] = [\n  { path: '/login', component: LoginPage, exact: true },\n];\n\nexport const privateRoutes: IRoute[] = [\n  { path: '/signup', component: SignUpPage, exact: true },\n  { path: '/main', component: MainPage, exact: true },\n  { path: '/users/:id', component: UserIdPage, exact: true },\n];\n\nexport const taskRoutes: IRoute[] = [\n  { path: '/tasks', component: TasksPage, exact: true },\n];\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { FC, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../../context/AuthContext';\nimport { useAuthActions } from '../../../hooks/useAuthActions';\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport DefaultButton from '../button/DefaultButton';\nimport classes from './Navbar.module.css';\n\nconst Navbar: FC = () => {\n  const { user } = useTypedSelector((state) => state.auth);\n  const { logout } = useAuthActions();\n  const { conSetIsAuth } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleButtonClick = () => {\n    logout();\n    conSetIsAuth(false);\n  };\n\n  const handleCreateNewUser = () => {\n    history.push('/signup');\n  };\n\n  return (\n    <div className={classes.navbar}>\n      <span>\n        Logged in as &gt; {user.email} ({user.uid})\n      </span>\n      <DefaultButton onClick={handleCreateNewUser}>\n        Create new User\n      </DefaultButton>\n      <DefaultButton onClick={handleButtonClick}>LogOut</DefaultButton>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AuthActionCreators } from '../store/reducers/auth/action-creators';\n\nexport const useAuthActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(AuthActionCreators, dispatch);\n};\n","import { Formik } from 'formik';\nimport React, { FC, useEffect } from 'react';\nimport SearchForm from '../components/SearchForm';\nimport InputWithCheckbox from '../components/UI/input/InputWithCheckbox';\nimport Navbar from '../components/UI/navbar/Navbar';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\n\nconst MainPage: FC = () => {\n  const { user } = useTypedSelector((state) => state.auth);\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <Navbar />\n      <h3>Hello on main APP page</h3>\n      <Formik\n        initialValues={{\n          hello: '',\n        }}\n        onSubmit={() => console.log('Form submitted')}\n      >\n        <InputWithCheckbox type=\"text\" name=\"hello\" />\n      </Formik>\n      <SearchForm />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport classnames from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={classnames.ltds}>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import {\n  createUserWithEmailAndPassword,\n  getAuth,\n  signOut\n} from '@firebase/auth';\nimport { doc, getFirestore, setDoc } from 'firebase/firestore';\nimport { Field, Form, Formik } from 'formik';\nimport React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from '../components/UI/loader/Loader';\n\nconst SignUpPage: FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  });\n\n  const handleSubmit = async (values: any) => {\n    if (values.password === values.rePassword) {\n      setLoading(true);\n      try {\n        const db = getFirestore();\n        const res = await createUserWithEmailAndPassword(\n          getAuth(),\n          values.email,\n          values.password\n        );\n        await setDoc(doc(db, 'users', res.user.uid), {\n          firstName: values.firstName,\n          lastName: values.lastName,\n          phoneNumber: '+38' + values.phoneNumber,\n        });\n        setCurrentUser({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          password: values.password,\n          email: values.email,\n        });\n        await signOut(getAuth());\n        setLoading(false);\n      } catch (e) {\n        console.log(e);\n        setLoading(false);\n      }\n    }\n  };\n  return (\n    <div className=\"new-user-page\">\n      <div className=\"back-bar\">\n        <Link to=\"/main\" className=\"new-user-btn\">\n          Back to Main\n        </Link>\n      </div>\n      <h3>Create new USER account:</h3>\n      <Formik\n        initialValues={{\n          email: '',\n          firstName: '',\n          lastName: '',\n          password: '',\n          rePassword: '',\n          phoneNumber: '',\n        }}\n        onSubmit={(values, { resetForm }) => {\n          handleSubmit(values);\n          resetForm();\n        }}\n      >\n        <Form className=\"new-user-form\">\n          <label htmlFor=\"email\">Email:</label>\n          <Field\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"jane@acme.com\"\n            type=\"email\"\n          />\n          <label htmlFor=\"firstName\">First Name:</label>\n          <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" />\n\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\n          <label htmlFor=\"phoneNumber\">Phone number:</label>\n          <Field id=\"phoneNumber\" name=\"phoneNumber\" placeholder=\"0501231231\" />\n          <label htmlFor=\"password\">Password:</label>\n          <Field id=\"password\" name=\"password\" placeholder=\"some password\" />\n          <label htmlFor=\"rePassword\">Re-type password:</label>\n          <Field\n            id=\"rePassword\"\n            name=\"rePassword\"\n            placeholder=\"re-type password\"\n          />\n\n          <button type=\"submit\">Create new User</button>\n        </Form>\n      </Formik>\n      {loading && <Loader />}\n      {currentUser.email && (\n        <div>\n          Last created user: {currentUser.firstName} {currentUser.lastName} with\n          password: {currentUser.password}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SignUpPage;\n","import React, { FC, useEffect, useState } from 'react';\nimport { doc, getDoc, getFirestore } from 'firebase/firestore';\nimport { Field, Form, Formik } from 'formik';\n\nconst UserIdPage: FC = (props: any) => {\n  //console.log(props.match.params.id);\n  const [user, setUser] = useState();\n\n  async function fetchUser(id: string) {\n    const docRef = doc(getFirestore(), 'users', id);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      const user: any = docSnap.data();\n      setUser(user);\n    }\n  }\n\n  useEffect(() => {\n    fetchUser(props.match.params.id);\n    console.log(user);\n  }, []);\n\n  return (\n    <div>\n      <h3>User id page</h3>\n      <input type=\"text\" disabled={true} />\n      <button onClick={() => console.log(user)}>ClickMe</button>\n      <Formik\n        initialValues={{\n          email: '',\n          check: false,\n        }}\n        onSubmit={() => console.log('world')}\n      >\n        {({ values }) => (\n          <Form className=\"new-user-form\">\n            <label htmlFor=\"email\">Email:</label>\n            <Field\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"jane@acme.com\"\n              type=\"email\"\n              disabled={values.check}\n            />\n            <Field type=\"checkbox\" name=\"check\" id=\"check\" />\n\n            <button type=\"submit\">qwe</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserIdPage;\n","import React, { FC, useContext } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { privateRoutes, publicRoutes, RouteNames } from '../router';\n\nconst AppRouter: FC = () => {\n  const { conIsAuth } = useContext(AuthContext);\n\n  return conIsAuth ? (\n    <Switch>\n      {privateRoutes.map((route) => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      <Redirect to={RouteNames.MAIN} />\n    </Switch>\n  ) : (\n    <Switch>\n      {publicRoutes.map((route) => (\n        <Route\n          path={route.path}\n          exact={route.exact}\n          component={route.component}\n          key={route.path}\n        />\n      ))}\n      <Redirect to={RouteNames.LOGIN} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import { initializeApp } from '@firebase/app';\nimport React, { FC, useEffect, useState } from 'react';\nimport AppRouter from './components/AppRouter';\nimport { AuthContext } from './context/AuthContext';\n\ninitializeApp({\n  apiKey: 'AIzaSyBvRkqo5dzUAZ4J6Uo3BfWtg_-hRw4LPAs',\n  authDomain: 'crc-expo-firestore.firebaseapp.com',\n  projectId: 'crc-expo-firestore',\n  storageBucket: 'crc-expo-firestore.appspot.com',\n  messagingSenderId: '163188046866',\n  appId: '1:163188046866:web:7184760fdab9d687b6accb',\n});\n\nconst App: FC = () => {\n  const [conIsAuth, conSetIsAuth] = useState(false);\n\n  useEffect((): void => {\n    if (localStorage.getItem('auth')) {\n      conSetIsAuth(true);\n    }\n  }, []);\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        conIsAuth,\n        conSetIsAuth,\n      }}\n    >\n      <AppRouter />\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","export interface Auto {\n  engine: string;\n  lastVisitToService: Date;\n  manufacturer: string;\n  mileage: number;\n  model: string;\n  modification: string;\n  productionYear: number;\n  regCity: string;\n  regNumber: string;\n  regSeries: string;\n  registrationDate: Date;\n  transmission: string;\n  vin: string;\n}\n\nexport enum AutoActionEnum {\n  SET_AUTO = 'SET_AUTO',\n  SET_LOADING = 'SET_LOADING',\n  SET_ERROR = 'SET_ERROR',\n}\n\nexport interface setAutoAction {\n  type: AutoActionEnum.SET_AUTO;\n  payload: Auto;\n}\n\nexport interface setLoadingAction {\n  type: AutoActionEnum.SET_LOADING;\n  payload: boolean;\n}\n\nexport interface setErrorAction {\n  type: AutoActionEnum.SET_ERROR;\n  payload: string;\n}\n\nexport type AutoAction = setAutoAction | setLoadingAction | setErrorAction;\n","import { User } from 'firebase/auth';\nimport { userInfo } from 'os';\nimport { AuthAction, AuthActionEnum, AuthState } from './types';\n\nconst initialState: AuthState = {\n  isAuth: false,\n  error: '',\n  isLoading: false,\n  user: {} as User,\n};\n\nexport default function authReducer(\n  state = initialState,\n  action: AuthAction\n): AuthState {\n  switch (action.type) {\n    case AuthActionEnum.SET_USER:\n      return { ...state, user: action.payload, isLoading: false };\n    case AuthActionEnum.SET_AUTH:\n      return { ...state, isAuth: action.payload, isLoading: false };\n    case AuthActionEnum.SET_ERROR:\n      return { ...state, error: action.payload, isLoading: false };\n    case AuthActionEnum.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import { Auto, AutoAction, AutoActionEnum } from './types';\n\nconst initialState = {\n  auto: {} as Auto,\n  isLoading: false,\n  error: '',\n};\n\nexport default function autoReducer(state = initialState, action: AutoAction) {\n  switch (action.type) {\n    case AutoActionEnum.SET_AUTO:\n      return { ...state, auto: action.payload, isLoading: false };\n    case AutoActionEnum.SET_ERROR:\n      return { ...state, error: action.payload, isLoading: false };\n    case AutoActionEnum.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport autoReducer from './auto';\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  auto: autoReducer,\n});\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport { store } from './store';\nimport './styles/main.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}